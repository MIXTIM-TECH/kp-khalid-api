{"version":3,"file":"static/js/430.bbcccb13.chunk.js","mappings":"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","sources":["Components/Card.tsx","Pages/Components/PageContent.tsx","Pages/Components/PageTitle.tsx","Pages/Components/Dashboard/Card.tsx","Pages/Components/Dashboard/Barchart.tsx","Pages/Dashboard.tsx"],"sourcesContent":["import { memo } from \"react\"\r\n\r\nconst Card = ({ cardBody, cardClassName, cardHeader }: CardT) => {\r\n    return (\r\n        <div className={`card shadow ${cardClassName}`}>\r\n            {cardHeader && <div className=\"card-header\">{cardHeader}</div>}\r\n            {cardBody && <div className=\"card-body\">{cardBody}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Card)\r\n","import { memo } from \"react\"\r\n\r\nconst PageContent = ({ children }: PageContentT) => {\r\n    return (\r\n        <div className=\"page-content-user\">\r\n            <section className=\"row\">\r\n                <div className=\"col-md-12 col-lg-12\">{children}</div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(PageContent)\r\n","import { Link } from \"react-router-dom\"\r\nimport { memo } from \"react\"\r\nimport { useAuth } from \"../../Hooks/useAuth\"\r\n\r\nconst PageTitle = ({ title }: PageTitleT) => {\r\n    const { role } = useAuth()\r\n\r\n    return (\r\n        <>\r\n            <header className=\"mb-3\">\r\n                <Link to=\"#\" className=\"burger-btn d-block d-xl-none\">\r\n                    <i className=\"bi bi-justify fs-3\"></i>\r\n                </Link>\r\n            </header>\r\n            <div className=\"page-heading d-flex justify-content-between\">\r\n                <div className=\"page-title\">\r\n                    <h3>{title}</h3>\r\n                </div>\r\n                <div className=\"user-avatar d-flex\">\r\n                    <div\r\n                        className=\"avatar bg-secondary me-2\"\r\n                        style={{ height: \"32px\" }}\r\n                    >\r\n                        <span className=\"avatar-content\">\r\n                            <i className=\"bi bi-person text-primary\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <Link to={`/${role}/ubah-profil`}>\r\n                        <p className=\"avatar-detail pt-1\">\r\n                            {role === \"user\" ? \"User\" : \"Admin\"} JK\r\n                        </p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(PageTitle)\r\n","import CardC from \"../Card\"\r\n\r\nconst Card: React.FC<{ title: string; total: number | string }> = ({\r\n    title,\r\n    total\r\n}) => {\r\n    return (\r\n        <CardC md={6} sm={12} lg={4}>\r\n            <div className=\"card-body text-center\">\r\n                <h3 className=\"fs-1 py-3 text-bg-primary fw-normal\">{total}</h3>\r\n                <p className=\"card-text text-bg-primary\">{title}</p>\r\n            </div>\r\n        </CardC>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from \"chart.js\"\r\nimport { memo } from \"react\"\r\nimport { Bar } from \"react-chartjs-2\"\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend)\r\n\r\nconst Barchart = () => {\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                position: \"top\" as const\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Chart.js Bar Chart\"\r\n            }\r\n        }\r\n    }\r\n\r\n    const labels = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\"\r\n    ]\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: \"Dataset 1\",\r\n                data: [10, 15, 10, 10, 2, 5, 6],\r\n                backgroundColor: \"rgba(255, 99, 132, 0.5)\"\r\n            },\r\n            {\r\n                label: \"Dataset 2\",\r\n                data: [5, 4, 9, 19, 29, 4, 2],\r\n                backgroundColor: \"rgba(53, 162, 235, 0.5)\"\r\n            }\r\n        ]\r\n    }\r\n\r\n    return <Bar options={options} data={data} />\r\n}\r\n\r\nexport default memo(Barchart)\r\n","// import Card from \"./Components/Card\"\r\nimport Card from \"../Pages/Components/Dashboard/Card\"\r\nimport CardLg from \"../Components/Card\"\r\nimport Barchart from \"./Components/Dashboard/Barchart\"\r\nimport PageTitle from \"./Components/PageTitle\"\r\nimport PageContent from \"./Components/PageContent\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { get } from \"../Functions/Api\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst Dashboard = () => {\r\n    const { type } = useParams()\r\n    const [info, setInfo] = useState<DataT>()\r\n\r\n    useEffect(() => {\r\n        const getInfo = async () => {\r\n            const res = await get(\"info\")\r\n            if (res.ok) setInfo(res.data)\r\n        }\r\n\r\n        getInfo()\r\n    }, [])\r\n\r\n    const cardTemplate = [\r\n        {\r\n            total: 300,\r\n            text: \"Jumlah Surat yang Diajukan\"\r\n        }\r\n    ]\r\n\r\n    const cards = [\r\n        {\r\n            total: 300,\r\n            text: \"Jumlah Kartu Keluarga\"\r\n        },\r\n        {\r\n            total: 300,\r\n            text: \"Jumlah Kartu Keluarga\"\r\n        }\r\n    ]\r\n\r\n    const cardsUser = [\r\n        {\r\n            total: 300,\r\n            text: \"\"\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Dashboard\" />\r\n\r\n            <PageContent>\r\n                <div className=\"row\">\r\n                    {type === \"user\" ? (\r\n                        <>\r\n                            <Card\r\n                                title=\"Jumlah Surat Yang Diajukan\"\r\n                                total={info?.total_letter}\r\n                            />\r\n                            <Card\r\n                                title=\"Jumlah Anggota Keluarga\"\r\n                                total={info?.total_family}\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Card\r\n                                title=\"Jumlah Surat Yang Diajukan\"\r\n                                total={info?.total_letter}\r\n                            />\r\n                            <Card\r\n                                title=\"Jumlah Kartu Keluarga\"\r\n                                total={info?.total_kk}\r\n                            />\r\n                            <Card\r\n                                title=\"Jumlah Penduduk\"\r\n                                total={info?.total_population}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <CardLg\r\n                            cardHeader={<h4>Grafik Pengajuan Surat</h4>}\r\n                            cardBody={<Barchart />}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </PageContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n"],"names":["Card","_ref","cardBody","cardClassName","cardHeader","_jsxs","className","concat","children","_jsx","memo","PageContent","PageTitle","title","role","useAuth","_Fragment","Link","to","style","height","total","CardC","md","sm","lg","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Barchart","data","labels","datasets","label","backgroundColor","Bar","options","responsive","plugins","legend","position","display","text","type","useParams","_useState","useState","_useState2","_slicedToArray","info","setInfo","useEffect","getInfo","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","get","sent","ok","stop","apply","arguments","total_letter","total_family","total_kk","total_population","CardLg"],"sourceRoot":""}