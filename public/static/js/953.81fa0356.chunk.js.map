{"version":3,"file":"static/js/953.81fa0356.chunk.js","mappings":"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","sources":["Components/Card.tsx","Pages/Components/Buttons/ButtonAdd.tsx","Pages/Components/Buttons/ButtonDelete.tsx","Pages/Components/Buttons/ButtonEdit.tsx","Pages/Components/PageContent.tsx","Pages/Components/PageTitle.tsx","Components/Search.tsx","Pages/Components/Table/TableTitle.tsx","Pages/Components/Table.tsx","Pages/DataKeluarga/DataKeluargaUser.tsx","Pages/DataKeluarga.tsx"],"sourcesContent":["import { memo } from \"react\"\r\n\r\nconst Card = ({ cardBody, cardClassName, cardHeader }: CardT) => {\r\n    return (\r\n        <div className={`card shadow ${cardClassName}`}>\r\n            {cardHeader && <div className=\"card-header\">{cardHeader}</div>}\r\n            {cardBody && <div className=\"card-body\">{cardBody}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Card)\r\n","import { memo } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst ButtonAdd = ({ text, to }: ButtonsLink) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"d-flex\">\r\n                <Link to={to} className=\"btn btn-primary\">\r\n                    {text}\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ButtonAdd)\r\n","const ButtonDelete = ({\r\n    props,\r\n    nik\r\n}: {\r\n    props?: React.ButtonHTMLAttributes<HTMLButtonElement>\r\n    nik?: string\r\n}) => {\r\n    return (\r\n        <button className=\"text-danger btn p-0\" data-nik={nik} {...props}>\r\n            <i className=\"bi bi-trash\" data-feather=\"delete-data\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonDelete\r\n","import { Link } from \"react-router-dom\"\r\n\r\nconst ButtonEdit = ({ to }: ButtonsLink) => {\r\n    return (\r\n        <Link to={to} className=\"text-success\">\r\n            <i className=\"bi bi-pencil\" data-feather=\"edit-data\" />\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ButtonEdit\r\n","import { memo } from \"react\"\r\n\r\nconst PageContent = ({ children }: PageContentT) => {\r\n    return (\r\n        <div className=\"page-content-user\">\r\n            <section className=\"row\">\r\n                <div className=\"col-md-12 col-lg-12\">{children}</div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(PageContent)\r\n","import { Link } from \"react-router-dom\"\r\nimport { memo } from \"react\"\r\nimport { useAuth } from \"../../Hooks/useAuth\"\r\n\r\nconst PageTitle = ({ title }: PageTitleT) => {\r\n    const { role } = useAuth()\r\n\r\n    return (\r\n        <>\r\n            <header className=\"mb-3\">\r\n                <Link to=\"#\" className=\"burger-btn d-block d-xl-none\">\r\n                    <i className=\"bi bi-justify fs-3\"></i>\r\n                </Link>\r\n            </header>\r\n            <div className=\"page-heading d-flex justify-content-between\">\r\n                <div className=\"page-title\">\r\n                    <h3>{title}</h3>\r\n                </div>\r\n                <div className=\"user-avatar d-flex\">\r\n                    <div\r\n                        className=\"avatar bg-secondary me-2\"\r\n                        style={{ height: \"32px\" }}\r\n                    >\r\n                        <span className=\"avatar-content\">\r\n                            <i className=\"bi bi-person text-primary\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <Link to={`/${role}/ubah-profil`}>\r\n                        <p className=\"avatar-detail pt-1\">\r\n                            {role === \"user\" ? \"User\" : \"Admin\"} JK\r\n                        </p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(PageTitle)\r\n","import { memo, useContext } from \"react\"\r\nimport { SearchContext } from \"../Pages/Components/Table\"\r\nimport { get } from \"../Functions/Api\"\r\n\r\nconst Search = () => {\r\n    const { url, dispatch } = useContext(SearchContext)\r\n\r\n    const handleSearch = async (value: string) => {\r\n        if (!url || !dispatch) return\r\n\r\n        const urlParse = getUrl(url, value)\r\n        const res = await get(urlParse)\r\n        if (res.ok) dispatch(res.data)\r\n    }\r\n\r\n    const search = async (evt: React.FormEvent<HTMLFormElement>) => {\r\n        evt.preventDefault()\r\n\r\n        const inputElemnet = evt.currentTarget.querySelector(\r\n            `[name=\"search\"]`\r\n        ) as HTMLInputElement\r\n        handleSearch(inputElemnet.value)\r\n    }\r\n\r\n    const getUrl = (url: string, keyword: string) => {\r\n        return url ? url.replace(\":keyword\", keyword) : \"\"\r\n    }\r\n\r\n    const getAll: React.KeyboardEventHandler<HTMLInputElement> = async (\r\n        evt\r\n    ) => {\r\n        const value = evt.currentTarget.value\r\n        if (value) return\r\n        handleSearch(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <form className=\"container-fluid\" onSubmit={search}>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"search\"\r\n                        placeholder=\"Cari berdasarkan NIK\"\r\n                        aria-label=\"NIK\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onKeyUp={getAll}\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                        <i className=\"bi bi-search\"></i>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Search)\r\n","import { memo } from \"react\"\r\nimport Search from \"../../../Components/Search\"\r\n\r\nconst TableTitle = ({ title }: TableT.TableTitleT) => {\r\n    return (\r\n        <div className=\"card-header d-flex justify-content-between\">\r\n            <h4 className=\"card-title\">{title}</h4>\r\n            <Search />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(TableTitle)\r\n","import { createContext, memo } from \"react\"\r\nimport Card from \"../../Components/Card\"\r\nimport TableTitle from \"./Table/TableTitle\"\r\n\r\nexport const SearchContext = createContext<TableT.SearchT>({})\r\n\r\nconst Table = ({ children, rowThead, title, search }: TableT.TableT) => {\r\n    return (\r\n        <SearchContext.Provider value={search}>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-12\">\r\n                    <Card\r\n                        cardClassName=\"p-3\"\r\n                        cardHeader={<TableTitle title={title} />}\r\n                        cardBody={\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-hover mb-0 text-center\">\r\n                                    <thead>{rowThead}</thead>\r\n                                    <tbody>{children}</tbody>\r\n                                </table>\r\n                            </div>\r\n                        }\r\n                    />\r\n                </div>\r\n            </div>\r\n        </SearchContext.Provider>\r\n    )\r\n}\r\n\r\nexport default memo(Table)\r\n","import { useEffect, useState } from \"react\"\r\nimport Table from \"../Components/Table\"\r\nimport useUserData from \"../../Hooks/useUserData\"\r\nimport { destroy, get } from \"../../Functions/Api\"\r\nimport ButtonEdit from \"../Components/Buttons/ButtonEdit\"\r\nimport ButtonDelete from \"../Components/Buttons/ButtonDelete\"\r\nimport { ConfirmDelete, PopupAlert } from \"../../Functions/Alerts\"\r\nimport ButtonAdd from \"../Components/Buttons/ButtonAdd\"\r\n\r\nconst DataKeluargaUser = () => {\r\n    const [anggotataKeluarga, setAnggotataKeluarga] = useState<DataT[]>()\r\n    const { no_kk, role } = useUserData()\r\n\r\n    useEffect(() => {\r\n        const getAnggotaKeluarga = async () => {\r\n            const res = await get(`anggota-keluarga?no_kk=${no_kk}`)\r\n            if (res.ok) setAnggotataKeluarga(res.data)\r\n        }\r\n\r\n        getAnggotaKeluarga()\r\n    }, [no_kk])\r\n\r\n    const RowHead = (\r\n        <tr>\r\n            <th>No</th>\r\n            <th>Nama</th>\r\n            <th>Nik</th>\r\n            <th>Action</th>\r\n        </tr>\r\n    )\r\n\r\n    const remove = (nik: string) => {\r\n        ConfirmDelete(\r\n            async () => {\r\n                const res = await destroy(\r\n                    `anggota-keluarga/${nik}?no_kk=${no_kk}`\r\n                )\r\n                if (res.ok) {\r\n                    PopupAlert.fire({\r\n                        icon: \"success\",\r\n                        text: \"Berhasil menghapus anggota keluarga\"\r\n                    })\r\n                }\r\n\r\n                const newAnggota = await get(`anggota-keluarga?no_kk=${no_kk}`)\r\n                if (newAnggota.ok) setAnggotataKeluarga(newAnggota.data)\r\n            },\r\n            {\r\n                title: \"Hapus anggota keluarga?\"\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ButtonAdd to=\"tambah\" text=\"Tambah Anggota Keluarga\" />\r\n\r\n            <Table\r\n                rowThead={RowHead}\r\n                title=\"Tabel Anggota Keluarga\"\r\n                search={{\r\n                    url: `anggota-keluarga?no_kk=${no_kk}&search=:keyword`,\r\n                    dispatch: setAnggotataKeluarga\r\n                }}\r\n            >\r\n                {anggotataKeluarga &&\r\n                    anggotataKeluarga.map(({ nama, nik }, i) => (\r\n                        <tr key={i}>\r\n                            <td className=\"text-bold-500\">{++i}</td>\r\n                            <td>{nama}</td>\r\n                            <td>{nik}</td>\r\n                            <td className=\"d-flex justify-content-center align-items-center gap-3\">\r\n                                <ButtonEdit\r\n                                    to={`/${role}/data-keluarga/${no_kk}/${nik}`}\r\n                                />\r\n                                <ButtonDelete\r\n                                    props={{ onClick: () => remove(nik) }}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataKeluargaUser\r\n","import PageContent from \"./Components/PageContent\"\r\nimport PageTitle from \"./Components/PageTitle\"\r\nimport { Suspense, lazy, useContext, useEffect, useState } from \"react\"\r\nimport { destroy, get } from \"../Functions/Api\"\r\nimport { ConfirmDelete, PopupAlert } from \"../Functions/Alerts\"\r\nimport { useParams } from \"react-router\"\r\nimport { RootContext } from \"./Root\"\r\nimport DataKeluargaUser from \"./DataKeluarga/DataKeluargaUser\"\r\n\r\nconst DataKeluargaAdmin = lazy(() => import(\"./DataKeluarga/DataKeluargaAdmin\"))\r\n\r\nconst DataKeluarga = () => {\r\n    const [dataKeluarga, setDataKeluarga] = useState<DataT[]>()\r\n    const { type } = useParams()\r\n    const {\r\n        user: { no_kk }\r\n    } = useContext(RootContext)\r\n\r\n    const deleteKeluarga = (nik: string, noKK: string) => {\r\n        ConfirmDelete(async () => {\r\n            const res = await destroy(`anggota-keluarga/${nik}?no_kk=${noKK}`)\r\n            if (res.ok) {\r\n                PopupAlert.fire({\r\n                    icon: \"success\",\r\n                    text: res.data?.message\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getDataKeluarga = async () => {\r\n            const path =\r\n                type !== \"user\"\r\n                    ? \"data-keluarga\"\r\n                    : `anggota-keluarga?no_kk=${no_kk}`\r\n            const res = await get(`${path}`)\r\n            if (res.ok) setDataKeluarga(res.data)\r\n        }\r\n        getDataKeluarga()\r\n    }, [no_kk, type])\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Data Keluarga\" />\r\n            <PageContent>\r\n                <Suspense>\r\n                    {type !== \"user\" ? (\r\n                        <DataKeluargaAdmin\r\n                            dataKeluarga={dataKeluarga}\r\n                            deleteKeluarga={deleteKeluarga}\r\n                            type={type}\r\n                            setDataKeluarga={setDataKeluarga}\r\n                        />\r\n                    ) : (\r\n                        <DataKeluargaUser />\r\n                    )}\r\n                </Suspense>\r\n            </PageContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataKeluarga\r\n"],"names":["Card","_ref","cardBody","cardClassName","cardHeader","_jsxs","className","concat","children","_jsx","memo","ButtonAdd","text","to","Link","props","nik","_objectSpread","PageContent","PageTitle","title","role","useAuth","_Fragment","style","height","Search","_useContext","useContext","SearchContext","url","dispatch","handleSearch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","urlParse","res","wrap","_context","prev","next","abrupt","getUrl","get","sent","ok","data","stop","_x","apply","arguments","search","_ref2","_callee2","evt","inputElemnet","_context2","preventDefault","currentTarget","querySelector","_x2","keyword","replace","getAll","_ref3","_callee3","_context3","_x3","onSubmit","type","name","placeholder","onKeyUp","id","TableTitle","createContext","Table","rowThead","Provider","_useState","useState","_useState2","_slicedToArray","anggotataKeluarga","setAnggotataKeluarga","_useUserData","useUserData","no_kk","useEffect","getAnggotaKeluarga","RowHead","map","i","nama","ButtonEdit","ButtonDelete","onClick","ConfirmDelete","newAnggota","destroy","PopupAlert","icon","remove","DataKeluargaAdmin","lazy","dataKeluarga","setDataKeluarga","useParams","RootContext","user","getDataKeluarga","path","Suspense","deleteKeluarga","noKK","_res$data","message","DataKeluargaUser"],"sourceRoot":""}