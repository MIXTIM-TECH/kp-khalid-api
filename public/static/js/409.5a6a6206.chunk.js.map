{"version":3,"file":"static/js/409.5a6a6206.chunk.js","mappings":"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","sources":["Components/Card.tsx","Pages/Components/Buttons/ButtonDelete.tsx","Pages/Components/PageTitle.tsx","Components/Search.tsx","Pages/Components/Table/TableTitle.tsx","Pages/Components/Table.tsx","Pages/KelolaAdmin/Create.tsx","Pages/KelolaAdmin.tsx"],"sourcesContent":["import { memo } from \"react\"\r\n\r\nconst Card = ({ cardBody, cardClassName, cardHeader }: CardT) => {\r\n    return (\r\n        <div className={`card shadow ${cardClassName}`}>\r\n            {cardHeader && <div className=\"card-header\">{cardHeader}</div>}\r\n            {cardBody && <div className=\"card-body\">{cardBody}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Card)\r\n","const ButtonDelete = ({\r\n    props,\r\n    nik\r\n}: {\r\n    props?: React.ButtonHTMLAttributes<HTMLButtonElement>\r\n    nik?: string\r\n}) => {\r\n    return (\r\n        <button className=\"text-danger btn p-0\" data-nik={nik} {...props}>\r\n            <i className=\"bi bi-trash\" data-feather=\"delete-data\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonDelete\r\n","import { Link } from \"react-router-dom\"\r\nimport { memo } from \"react\"\r\nimport { useAuth } from \"../../Hooks/useAuth\"\r\n\r\nconst PageTitle = ({ title }: PageTitleT) => {\r\n    const { role } = useAuth()\r\n\r\n    return (\r\n        <>\r\n            <header className=\"mb-3\">\r\n                <Link to=\"#\" className=\"burger-btn d-block d-xl-none\">\r\n                    <i className=\"bi bi-justify fs-3\"></i>\r\n                </Link>\r\n            </header>\r\n            <div className=\"page-heading d-flex justify-content-between\">\r\n                <div className=\"page-title\">\r\n                    <h3>{title}</h3>\r\n                </div>\r\n                <div className=\"user-avatar d-flex\">\r\n                    <div\r\n                        className=\"avatar bg-secondary me-2\"\r\n                        style={{ height: \"32px\" }}\r\n                    >\r\n                        <span className=\"avatar-content\">\r\n                            <i className=\"bi bi-person text-primary\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <Link to={`/${role}/ubah-profil`}>\r\n                        <p className=\"avatar-detail pt-1\">\r\n                            {role === \"user\" ? \"User\" : \"Admin\"} JK\r\n                        </p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(PageTitle)\r\n","import { memo, useContext } from \"react\"\r\nimport { SearchContext } from \"../Pages/Components/Table\"\r\nimport { get } from \"../Functions/Api\"\r\n\r\nconst Search = () => {\r\n    const { url, dispatch } = useContext(SearchContext)\r\n\r\n    const handleSearch = async (value: string) => {\r\n        if (!url || !dispatch) return\r\n\r\n        const urlParse = getUrl(url, value)\r\n        const res = await get(urlParse)\r\n        if (res.ok) dispatch(res.data)\r\n    }\r\n\r\n    const search = async (evt: React.FormEvent<HTMLFormElement>) => {\r\n        evt.preventDefault()\r\n\r\n        const inputElemnet = evt.currentTarget.querySelector(\r\n            `[name=\"search\"]`\r\n        ) as HTMLInputElement\r\n        handleSearch(inputElemnet.value)\r\n    }\r\n\r\n    const getUrl = (url: string, keyword: string) => {\r\n        return url ? url.replace(\":keyword\", keyword) : \"\"\r\n    }\r\n\r\n    const getAll: React.KeyboardEventHandler<HTMLInputElement> = async (\r\n        evt\r\n    ) => {\r\n        const value = evt.currentTarget.value\r\n        if (value) return\r\n        handleSearch(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <form className=\"container-fluid\" onSubmit={search}>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"search\"\r\n                        placeholder=\"Cari berdasarkan NIK\"\r\n                        aria-label=\"NIK\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onKeyUp={getAll}\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                        <i className=\"bi bi-search\"></i>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Search)\r\n","import { memo } from \"react\"\r\nimport Search from \"../../../Components/Search\"\r\n\r\nconst TableTitle = ({ title }: TableT.TableTitleT) => {\r\n    return (\r\n        <div className=\"card-header d-flex justify-content-between\">\r\n            <h4 className=\"card-title\">{title}</h4>\r\n            <Search />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(TableTitle)\r\n","import { createContext, memo } from \"react\"\r\nimport Card from \"../../Components/Card\"\r\nimport TableTitle from \"./Table/TableTitle\"\r\n\r\nexport const SearchContext = createContext<TableT.SearchT>({})\r\n\r\nconst Table = ({ children, rowThead, title, search }: TableT.TableT) => {\r\n    return (\r\n        <SearchContext.Provider value={search}>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-12\">\r\n                    <Card\r\n                        cardClassName=\"p-3\"\r\n                        cardHeader={<TableTitle title={title} />}\r\n                        cardBody={\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-hover mb-0 text-center\">\r\n                                    <thead>{rowThead}</thead>\r\n                                    <tbody>{children}</tbody>\r\n                                </table>\r\n                            </div>\r\n                        }\r\n                    />\r\n                </div>\r\n            </div>\r\n        </SearchContext.Provider>\r\n    )\r\n}\r\n\r\nexport default memo(Table)\r\n","import { memo } from \"react\"\r\nimport FormGroup from \"../../Components/FormGroup\"\r\nimport { PopupAlert } from \"../../Functions/Alerts\"\r\nimport { post } from \"../../Functions/Api\"\r\nimport Icon from \"../../Assets/images/logo/logo.png\"\r\nimport { el } from \"../../Functions/GetElement\"\r\n\r\nconst Create = ({ getAdmin }: { getAdmin: () => Promise<ApiT.ResponseT> }) => {\r\n    const createAdmin = async (evt: React.FormEvent<HTMLFormElement>) => {\r\n        evt.preventDefault()\r\n\r\n        const form = evt.currentTarget\r\n        const res = await post(\"admin\", form)\r\n        if (!res.ok) return\r\n\r\n        const newAdmins = await getAdmin()\r\n        if (!newAdmins.ok) return\r\n\r\n        el(\"#closeAddAdminModal\")?.click()\r\n\r\n        PopupAlert.fire({\r\n            icon: \"success\",\r\n            text: \"Berhasil menambahkan admin baru.\"\r\n        })\r\n\r\n        const close = form.querySelector(\".close\")\r\n        if (close) (close as HTMLButtonElement).click()\r\n    }\r\n\r\n    const formGroupAdmins: FormGroupT[] = [\r\n        {\r\n            label: \"Masukkan Username\",\r\n            type: \"text\",\r\n            name: \"username\",\r\n            placeholder: \"Jhon\"\r\n        },\r\n        {\r\n            label: \"Masukkan Password\",\r\n            type: \"password\",\r\n            name: \"password\",\r\n            placeholder: \"*************\"\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div\r\n            className=\"modal fade\"\r\n            id=\"add-admin-modal\"\r\n            tabIndex={-1}\r\n            aria-labelledby=\"add-admin-modalLabel\"\r\n            aria-hidden=\"true\"\r\n            role=\"dialog\"\r\n        >\r\n            <form\r\n                className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\"\r\n                role=\"document\"\r\n                onSubmit={createAdmin}\r\n            >\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <div className=\"w-100 text-center\">\r\n                            <img\r\n                                src={Icon}\r\n                                alt=\"Logo\"\r\n                                style={{\r\n                                    width: \"54px\",\r\n                                    height: \"54px\"\r\n                                }}\r\n                            />\r\n                            <h3 className=\"fs-5 text-dark fw-bold mt-3\">\r\n                                POLANDU JK\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {formGroupAdmins.map((e, i) => (\r\n                            <div className=\"mb-5\" key={i}>\r\n                                <FormGroup {...e} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"d-none\"\r\n                            data-bs-dismiss=\"modal\"\r\n                            id=\"closeAddAdminModal\"\r\n                        >\r\n                            Close\r\n                        </button>\r\n                        <button className=\"btn btn-primary w-100\">\r\n                            Tambah Admin\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Create)\r\n","import { useCallback, useEffect, useState } from \"react\"\r\nimport ButtonDelete from \"./Components/Buttons/ButtonDelete\"\r\nimport PageTitle from \"./Components/PageTitle\"\r\nimport Table from \"./Components/Table\"\r\nimport { destroy, get } from \"../Functions/Api\"\r\nimport Create from \"./KelolaAdmin/Create\"\r\nimport { PopupAlert } from \"../Functions/Alerts\"\r\nimport { ConfirmDelete } from \"../Functions/Alerts\"\r\n\r\nconst KelolaAdmin = () => {\r\n    const [admins, setAdmins] = useState<DataT[]>()\r\n\r\n    const getAdmin = useCallback(async () => {\r\n        const res = await get(\"admin\")\r\n        if (res.ok) setAdmins(res.data)\r\n        return res\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getAdmin()\r\n    }, [])\r\n\r\n    const deleteAdmin = (username: string) => {\r\n        ConfirmDelete(async () => {\r\n            const res = await destroy(`admin/${username}`)\r\n            if (!res.ok) return\r\n\r\n            const admins = await get(\"admin\")\r\n            if (!admins.ok) return\r\n\r\n            setAdmins(admins.data)\r\n            PopupAlert.fire({\r\n                icon: \"success\",\r\n                text: \"Berhasil Menghapus Admin!\"\r\n            })\r\n        })\r\n    }\r\n\r\n    const HeadRow = (\r\n        <tr>\r\n            <th>No</th>\r\n            <th>Username</th>\r\n            <th>Action</th>\r\n        </tr>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Kelola Admin\" />\r\n            <button\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#add-admin-modal\"\r\n                className=\"btn btn-primary\"\r\n            >\r\n                Tambah Admin\r\n            </button>\r\n            <Table\r\n                rowThead={HeadRow}\r\n                title=\"Tabel Data Admin\"\r\n                search={{\r\n                    url: \"admin?search=:keyword\",\r\n                    dispatch: setAdmins\r\n                }}\r\n            >\r\n                {admins &&\r\n                    admins.map((admin, i) => (\r\n                        <tr key={i}>\r\n                            <td className=\"text-bold-500\">{++i}</td>\r\n                            <td>{admin.username}</td>\r\n                            <td>\r\n                                <ButtonDelete\r\n                                    props={{\r\n                                        onClick: () =>\r\n                                            deleteAdmin(admin.username)\r\n                                    }}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n            </Table>\r\n            <Create getAdmin={getAdmin} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default KelolaAdmin\r\n"],"names":["Card","_ref","cardBody","cardClassName","cardHeader","_jsxs","className","concat","children","_jsx","memo","props","nik","_objectSpread","PageTitle","title","role","useAuth","_Fragment","Link","to","style","height","Search","_useContext","useContext","SearchContext","url","dispatch","handleSearch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","urlParse","res","wrap","_context","prev","next","abrupt","getUrl","get","sent","ok","data","stop","_x","apply","arguments","search","_ref2","_callee2","evt","inputElemnet","_context2","preventDefault","currentTarget","querySelector","_x2","keyword","replace","getAll","_ref3","_callee3","_context3","_x3","onSubmit","type","name","placeholder","onKeyUp","id","TableTitle","createContext","Table","rowThead","Provider","Create","getAdmin","createAdmin","_el","form","close","post","el","click","PopupAlert","icon","text","tabIndex","src","Icon","alt","width","label","map","e","i","FormGroup","_useState","useState","_useState2","_slicedToArray","admins","setAdmins","useCallback","useEffect","HeadRow","admin","username","ButtonDelete","onClick","ConfirmDelete","destroy"],"sourceRoot":""}