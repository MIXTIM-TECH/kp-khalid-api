{"version":3,"file":"static/js/642.f98ab91e.chunk.js","mappings":"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","sources":["Components/Card.tsx","Pages/Components/Buttons/ButtonCheck.tsx","Pages/Components/Buttons/ButtonEdit.tsx","Pages/Components/PageTitle.tsx","Components/Search.tsx","Pages/Components/Table/TableTitle.tsx","Pages/Components/Table.tsx","Pages/DataSurat.tsx"],"sourcesContent":["import { memo } from \"react\"\r\n\r\nconst Card = ({ cardBody, cardClassName, cardHeader }: CardT) => {\r\n    return (\r\n        <div className={`card shadow ${cardClassName}`}>\r\n            {cardHeader && <div className=\"card-header\">{cardHeader}</div>}\r\n            {cardBody && <div className=\"card-body\">{cardBody}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Card)\r\n","const ButtonCheck = ({\r\n    props,\r\n    nik\r\n}: {\r\n    props: React.ButtonHTMLAttributes<HTMLButtonElement>\r\n    nik: string\r\n}) => {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className=\"text-success btn p-0\"\r\n            data-nik={nik}\r\n            {...props}\r\n        >\r\n            <i className=\"bi bi-check fs-2 lh-1\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonCheck\r\n","import { Link } from \"react-router-dom\"\r\n\r\nconst ButtonEdit = ({ to }: ButtonsLink) => {\r\n    return (\r\n        <Link to={to} className=\"text-success\">\r\n            <i className=\"bi bi-pencil\" data-feather=\"edit-data\" />\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ButtonEdit\r\n","import { Link } from \"react-router-dom\"\r\nimport { memo } from \"react\"\r\nimport { useAuth } from \"../../Hooks/useAuth\"\r\n\r\nconst PageTitle = ({ title }: PageTitleT) => {\r\n    const { role } = useAuth()\r\n\r\n    return (\r\n        <>\r\n            <header className=\"mb-3\">\r\n                <Link to=\"#\" className=\"burger-btn d-block d-xl-none\">\r\n                    <i className=\"bi bi-justify fs-3\"></i>\r\n                </Link>\r\n            </header>\r\n            <div className=\"page-heading d-flex justify-content-between\">\r\n                <div className=\"page-title\">\r\n                    <h3>{title}</h3>\r\n                </div>\r\n                <div className=\"user-avatar d-flex\">\r\n                    <div\r\n                        className=\"avatar bg-secondary me-2\"\r\n                        style={{ height: \"32px\" }}\r\n                    >\r\n                        <span className=\"avatar-content\">\r\n                            <i className=\"bi bi-person text-primary\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <Link to={`/${role}/ubah-profil`}>\r\n                        <p className=\"avatar-detail pt-1\">\r\n                            {role === \"user\" ? \"User\" : \"Admin\"} JK\r\n                        </p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(PageTitle)\r\n","import { memo, useContext } from \"react\"\r\nimport { SearchContext } from \"../Pages/Components/Table\"\r\nimport { get } from \"../Functions/Api\"\r\n\r\nconst Search = () => {\r\n    const { url, dispatch } = useContext(SearchContext)\r\n\r\n    const handleSearch = async (value: string) => {\r\n        if (!url || !dispatch) return\r\n\r\n        const urlParse = getUrl(url, value)\r\n        const res = await get(urlParse)\r\n        if (res.ok) dispatch(res.data)\r\n    }\r\n\r\n    const search = async (evt: React.FormEvent<HTMLFormElement>) => {\r\n        evt.preventDefault()\r\n\r\n        const inputElemnet = evt.currentTarget.querySelector(\r\n            `[name=\"search\"]`\r\n        ) as HTMLInputElement\r\n        handleSearch(inputElemnet.value)\r\n    }\r\n\r\n    const getUrl = (url: string, keyword: string) => {\r\n        return url ? url.replace(\":keyword\", keyword) : \"\"\r\n    }\r\n\r\n    const getAll: React.KeyboardEventHandler<HTMLInputElement> = async (\r\n        evt\r\n    ) => {\r\n        const value = evt.currentTarget.value\r\n        if (value) return\r\n        handleSearch(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <form className=\"container-fluid\" onSubmit={search}>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"search\"\r\n                        placeholder=\"Cari berdasarkan NIK\"\r\n                        aria-label=\"NIK\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onKeyUp={getAll}\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                        <i className=\"bi bi-search\"></i>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Search)\r\n","import { memo } from \"react\"\r\nimport Search from \"../../../Components/Search\"\r\n\r\nconst TableTitle = ({ title }: TableT.TableTitleT) => {\r\n    return (\r\n        <div className=\"card-header d-flex justify-content-between\">\r\n            <h4 className=\"card-title\">{title}</h4>\r\n            <Search />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(TableTitle)\r\n","import { createContext, memo } from \"react\"\r\nimport Card from \"../../Components/Card\"\r\nimport TableTitle from \"./Table/TableTitle\"\r\n\r\nexport const SearchContext = createContext<TableT.SearchT>({})\r\n\r\nconst Table = ({ children, rowThead, title, search }: TableT.TableT) => {\r\n    return (\r\n        <SearchContext.Provider value={search}>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-12\">\r\n                    <Card\r\n                        cardClassName=\"p-3\"\r\n                        cardHeader={<TableTitle title={title} />}\r\n                        cardBody={\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-hover mb-0 text-center\">\r\n                                    <thead>{rowThead}</thead>\r\n                                    <tbody>{children}</tbody>\r\n                                </table>\r\n                            </div>\r\n                        }\r\n                    />\r\n                </div>\r\n            </div>\r\n        </SearchContext.Provider>\r\n    )\r\n}\r\n\r\nexport default memo(Table)\r\n","import PageTitle from \"./Components/PageTitle\"\r\nimport Table from \"./Components/Table\"\r\nimport ButtonCheck from \"./Components/Buttons/ButtonCheck\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { get, put } from \"../Functions/Api\"\r\nimport ButtonEdit from \"./Components/Buttons/ButtonEdit\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { PopupAlert, UploadFileAlert } from \"../Functions/Alerts\"\r\n\r\nconst DataSurat = () => {\r\n    const [dataSurat, setDataSurat] = useState<DataT[]>()\r\n\r\n    useEffect(() => {\r\n        const getDataSurat = async () => {\r\n            const res = await get(\"surat\")\r\n            console.log(res)\r\n            if (res.ok) setDataSurat(res.data)\r\n        }\r\n\r\n        getDataSurat()\r\n    }, [])\r\n\r\n    const apply = (evt: React.MouseEvent<HTMLButtonElement>) => {\r\n        const id = evt.currentTarget.dataset?.nik\r\n\r\n        UploadFileAlert(async (form) => {\r\n            const res = await put(`surat/upload/${id}`, form)\r\n\r\n            console.log(res)\r\n            if (res.ok) {\r\n                PopupAlert.fire({\r\n                    icon: \"success\",\r\n                    text: res.data?.message\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const reject = () => {}\r\n\r\n    const RowHead = (\r\n        <tr>\r\n            <th>No</th>\r\n            <th>NIK</th>\r\n            <th>Jenis Surat</th>\r\n            <th className=\"text-center\">Status</th>\r\n            <th colSpan={2}>ACTION</th>\r\n        </tr>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Data Surat\" />\r\n            <Table\r\n                title=\"Tabel Data Surat\"\r\n                rowThead={RowHead}\r\n                search={{\r\n                    url: \"surat?search=:keyword\",\r\n                    dispatch: setDataSurat\r\n                }}\r\n            >\r\n                {dataSurat &&\r\n                    dataSurat.map(\r\n                        (\r\n                            {\r\n                                pemohon: nik,\r\n                                info: { nama, jenis_surat },\r\n                                status,\r\n                                id\r\n                            },\r\n                            i\r\n                        ) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>{++i}</td>\r\n                                    <td>{nik}</td>\r\n                                    <td>{nama}</td>\r\n                                    <td className=\"text-center\">\r\n                                        {status ? (\r\n                                            <button\r\n                                                className=\"btn btn-success d-flex align-items-center gap-1 mx-auto\"\r\n                                                disabled\r\n                                            >\r\n                                                <i className=\"bi bi-check-circle\" />\r\n                                                Selesai\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button\r\n                                                className=\"btn btn-warning d-flex align-items-center gap-1 mx-auto\"\r\n                                                disabled\r\n                                            >\r\n                                                <i className=\"bi bi-arrow-clockwise\" />\r\n                                                Proses\r\n                                            </button>\r\n                                        )}\r\n                                    </td>\r\n                                    <td className=\"d-flex justify-content-center align-items-center gap-1\">\r\n                                        <Link\r\n                                            to={`${jenis_surat}/${id}/detail?nik=${nik}`}\r\n                                            className=\"text-info me-2\"\r\n                                        >\r\n                                            <i\r\n                                                className=\"bi bi-eye\"\r\n                                                data-feather=\"detail-data\"\r\n                                            />\r\n                                        </Link>\r\n                                        <ButtonEdit\r\n                                            to={`${jenis_surat}/${id}/edit?nama=${nama}`}\r\n                                        />\r\n\r\n                                        <ButtonCheck\r\n                                            props={{\r\n                                                onClick: apply\r\n                                            }}\r\n                                            nik={id}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    )}\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataSurat\r\n"],"names":["Card","_ref","cardBody","cardClassName","cardHeader","_jsxs","className","concat","children","_jsx","memo","props","nik","_objectSpread","type","to","Link","PageTitle","title","role","useAuth","_Fragment","style","height","Search","_useContext","useContext","SearchContext","url","dispatch","handleSearch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","urlParse","res","wrap","_context","prev","next","abrupt","getUrl","get","sent","ok","data","stop","_x","apply","arguments","search","_ref2","_callee2","evt","inputElemnet","_context2","preventDefault","currentTarget","querySelector","_x2","keyword","replace","getAll","_ref3","_callee3","_context3","_x3","onSubmit","name","placeholder","onKeyUp","id","TableTitle","createContext","Table","rowThead","Provider","_useState","useState","_useState2","_slicedToArray","dataSurat","setDataSurat","useEffect","getDataSurat","console","log","_evt$currentTarget$da","dataset","UploadFileAlert","form","_res$data","put","PopupAlert","icon","text","message","RowHead","colSpan","map","i","pemohon","_ref3$info","info","nama","jenis_surat","status","disabled","ButtonEdit","ButtonCheck","onClick"],"sourceRoot":""}